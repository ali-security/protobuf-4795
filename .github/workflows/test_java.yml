name: Java Tests

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: OpenJDK 8
            version: '8'
            image: eclipse-temurin:8-jdk
            targets: //java/... //java/internal:java_version
          - name: OpenJDK 11
            version: '11'
            image: eclipse-temurin:11-jdk
            targets: //java/... //java/internal:java_version
          - name: OpenJDK 17
            version: '17'
            image: eclipse-temurin:17-jdk
            targets: //java/... //java/internal:java_version

    name: Linux ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pending changes
        uses: actions/checkout@v3
      - name: Run tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ${{ matrix.image }} \
          bash -c "bazel test ${{ matrix.targets }} --test_env=KOKORO_JAVA_VERSION"

  linkage-monitor:
    name: Linux Linkage Monitor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pending changes
        uses: actions/checkout@v3
      - name: Run Linkage Monitor test
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace eclipse-temurin:8-jdk \
          bash -c "bazel test --test_output=all //java:linkage_monitor --spawn_strategy=standalone"

  protobuf-bom:
    name: Protobuf Maven BOM
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pending changes
      uses: actions/checkout@v3
    - name: Build protoc (assumes bazel installed on runner)
      run: |
        bazel build //:protoc
        cp bazel-bin/protoc protoc
        sudo rm -rf _build
    - name: Install snapshot version locally (not using generated pom.xml)
      run: |
        mvn -e -B -Dhttps.protocols=TLSv1.2 install -Dmaven.test.skip=true
      working-directory: java
    - name: Generate pom.xml files from the template
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace eclipse-temurin:11-jdk \
        bash -c "bazel build //java/core:core_mvn-pom //java/util:util_mvn-pom"
        cp bazel-bin/java/core/core_mvn-pom.xml .
        cp bazel-bin/java/util/util_mvn-pom.xml .
    - name: Copy the generated pom.xml files to the local Maven repository
      run: |
        LOCAL_MAVEN_GROUP_DIR="${HOME}/.m2/repository/com/google/protobuf"
        VERSION=$(grep "<version>" core_mvn-pom.xml | sed "s/<version>\(.*\)<\/version>/\1/" | xargs)
        mkdir -p ${LOCAL_MAVEN_GROUP_DIR}/protobuf-java/${VERSION}
        mkdir -p ${LOCAL_MAVEN_GROUP_DIR}/protobuf-java-util/${VERSION}
        cp core_mvn-pom.xml ${LOCAL_MAVEN_GROUP_DIR}/protobuf-java/${VERSION}/protobuf-java-${VERSION}.pom
        cp util_mvn-pom.xml ${LOCAL_MAVEN_GROUP_DIR}/protobuf-java-util/${VERSION}/protobuf-java-util-${VERSION}.pom
    - name: Clean up
      run: |
        sudo rm -rf _build
    - name: Validate Protobuf BOM
      uses: googleapis/java-cloud-bom/tests/validate-bom@fd56f04bb0bc581776a74031591f0b3bc5e7920a
      with:
        bom-path: java/bom/pom.xml
